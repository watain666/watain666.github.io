[{"categories":null,"content":"Gâuchá! chia̍hpá bōe? Góa Lâu TiâuUî lah! Chiah sī Góa ê kisu̍t Blog, khǹg Góa chò ê kap Góa ū chhùbī ê mi̍hkiāⁿ ê só͘chāi. Nāū tāichì ēsái thàukòe tiānchú phoetháng lâi siochhōe. ","date":"2020/12/12","objectID":"/about/:0:0","tags":null,"title":"Siāukài","uri":"/about/"},{"categories":["Tool"],"content":"Hō͘ pīntōaⁿlâng ê Chhōe Tâigí Sûtián kesi","date":"2018/11/22","objectID":"/chhoe-taigi-shortcuts/","tags":["iOS","Shortcuts","Tâigí","Pe̍hōejī"],"title":"Chhōe Tâigí Shortcuts","uri":"/chhoe-taigi-shortcuts/"},{"categories":["Tool"],"content":"Chhōe Tâigí sī chiok hó ēng ê Tâigí sûtián bāngchām m̄koh khòaⁿ tio̍h bōehiáu ê jī tio̍h ài phahkhui bāngchām chi̍t jī chi̍t jī chhâ si̍tchāi siuⁿ hùikhì téng pái siāukài ê Chhōe Tâigí Chrome Extension kanna káikoat tiāu ēng tiānnáu chhōe jī ê khùnkéng ēng kiá chhōe iûgoân sī chiok hùikhì só͘í tio̍h ū chi̍t ê kesi ê chhuthiān Chhōe Tâigí Shortcuts seng demo hō͘ lín khòaⁿ demo nāsī ū ēng kòe iOS 12 ê sin konglêng Shortcuts ê lâng engkai sī bōe ū siáⁿ būntê khólū tio̍h m̄bat ēng kòe ê lâng khólêng kah chōe sòa–lo̍hlâi tio̍h lâi nā khòaⁿ tô͘ nā o̍h lân ū saⁿchióng hongsek ēsái ēng ","date":"2018/11/22","objectID":"/chhoe-taigi-shortcuts/:0:0","tags":["iOS","Shortcuts","Tâigí","Pe̍hōejī"],"title":"Chhōe Tâigí Shortcuts","uri":"/chhoe-taigi-shortcuts/"},{"categories":["Tool"],"content":"1. Ēng widget chhōe Ēng widget chhōe Step 1\"\rĒng widget chhōe Step 1\r Ēng widget chhōe Step 2\"\rĒng widget chhōe Step 2\r Ēng widget chhōe Step 3\"\rĒng widget chhōe Step 3\r Ēng widget chhōe Step 4\"\rĒng widget chhōe Step 4\r ","date":"2018/11/22","objectID":"/chhoe-taigi-shortcuts/:1:0","tags":["iOS","Shortcuts","Tâigí","Pe̍hōejī"],"title":"Chhōe Tâigí Shortcuts","uri":"/chhoe-taigi-shortcuts/"},{"categories":["Tool"],"content":"2. Ēng siri chhōe Ēng siri chhōe Step 1\"\rĒng siri chhōe Step 1\r Ēng siri chhōe Step 2\"\rĒng siri chhōe Step 2\r Ēng siri chhōe Step 3\"\rĒng siri chhōe Step 3\r Ēng siri chhōe Step 4\"\rĒng siri chhōe Step 4\r Ēng siri chhōe Step 5\"\rĒng siri chhōe Step 5\r Ēng siri chhōe Step 6\"\rĒng siri chhōe Step 6\r ","date":"2018/11/22","objectID":"/chhoe-taigi-shortcuts/:2:0","tags":["iOS","Shortcuts","Tâigí","Pe̍hōejī"],"title":"Chhōe Tâigí Shortcuts","uri":"/chhoe-taigi-shortcuts/"},{"categories":["Tool"],"content":"3. Ūi chúōebīn chhōe Ūi chúōebīn chhōe Step 1\"\rŪi chúōebīn chhōe Step 1\r Ūi chúōebīn chhōe Step 2\"\rŪi chúōebīn chhōe Step 2\r Ūi chúōebīn chhōe Step 3\"\rŪi chúōebīn chhōe Step 3\r Ūi chúōebīn chhōe Step 4\"\rŪi chúōebīn chhōe Step 4\r Ūi chúōebīn chhōe Step 5\"\rŪi chúōebīn chhōe Step 5\r Ūi chúōebīn chhōe Step 6\"\rŪi chúōebīn chhōe Step 6\r Download Chhōe Tâigí Shortcuts ","date":"2018/11/22","objectID":"/chhoe-taigi-shortcuts/:3:0","tags":["iOS","Shortcuts","Tâigí","Pe̍hōejī"],"title":"Chhōe Tâigí Shortcuts","uri":"/chhoe-taigi-shortcuts/"},{"categories":null,"content":" \u003c?php namespace App\\Task; use Hyperf\\Amqp\\Producer; use Hyperf\\DB\\DB; use Hyperf\\Utils\\ApplicationContext; use Psr\\EventDispatcher\\EventDispatcherInterface; use ssc9\\cst\\GameType; use ssc9\\evt\\NewDrawEvent; use ssc9\\model\\GameConfigModel; use ssc9\\mq\\MqMessage; use ssc9\\mq\\RoutingKey; use ssc9\\util\\GameUtils; class CheckDrawsTask { public static function execute() { $container = ApplicationContext::getContainer(); try { foreach (GameType::$key2id as $game_type) { if (empty(GameType::$g_cls[$game_type]) || $game_type == GameType::SIX) continue; $game = GameType::$g_cls[$game_type]; $curr_draw = $game::create_draw(); $info = $game::get_draw_time($curr_draw); //当期 $gTable = $container-\u003eget('dtables'); $old_draw = $gTable-\u003eget(\"$game_type\", 'open');//保存在内存的上一期 if ($curr_draw \u003e $old_draw) { $info-\u003eleft_time = $info-\u003eclose_time - time(); $gTable-\u003eset(\"$game_type\", [ 'open' =\u003e $curr_draw, 'open_time' =\u003e $info-\u003eopen_time, 'close_time' =\u003e $info-\u003eclose_time ]); self::build_draw($game_type, $curr_draw, $info); GameConfigModel::query()-\u003ewhere('id', '=', $game_type)-\u003eupdate( [ 'curr_draw' =\u003e $curr_draw, 'close_time' =\u003e $info-\u003eend_time ]); $event = new NewDrawEvent($game_type, $old_draw, $curr_draw, $info); $container-\u003eget(EventDispatcherInterface::class)-\u003edispatch($event); $container-\u003eget(Producer::class)-\u003eproduce(new MqMessage($event, RoutingKey::draw_new)); } } } catch (\\Exception $e) { echo $e-\u003egetMessage() . $e-\u003egetTraceAsString(); } } private static function build_draw($game_type, $draw, $info) { $sql = sprintf(\"insert ignore into ssc_draw_info (id,date,game_type,game_id,start_time,end_time,open_time,close_time,info) values (%s,%s,%s,%s,%s,%s,%s,%s,%s)\", GameUtils::make_game_key($game_type, $draw), $info-\u003edate, $game_type, $draw, $info-\u003estart_time, $info-\u003eend_time, $info-\u003eopen_time, $info-\u003eclose_time, 0); DB::execute($sql); } } 2: ́ 3: ̀ 5: ̂ 7: ̄ 8: ̍ 9: ̆ Å å A Á À Â Ā A̍ Ă a á à â ā a̍ ă A͘ Á͘ À͘ Â͘ Ā͘ A̍͘ Ă͘ a͘ á͘ à͘ â͘ ā͘ a̍͘ ă͘ D Ḏ ḏ Đ đ E É È Ê Ē E̍ Ĕ e é è ê ē e̍ ĕ E͘ É͘ È͘ Ê͘ Ē͘ E̍͘ Ĕ͘ e͘ é͘ è͘ ê͘ ē͘ e̍͘ ĕ͘ Ï ï I Í Ì Î Ī I̍ Ĭ i í ì î ī i̍ ĭ I͘ Í͘ Ì͘ Î͘ Ī͘ I̍͘ Ĭ͘ i͘ í͘ ì͘ î͘ ī͘ i̍͘ ĭ͘ L Ḻ ḻ M Ḿ M̀ M̂ M̄ M̍ M̆ m ḿ m̀ m̂ m̄ m̍ m̆ N Ń Ǹ N̂ N̄ N̍ N̆ n ń ǹ n̂ n̄ n̍ n̆ ⁿ O Ó Ò Ô Ō O̍ Ŏ o ó ò ô ō o̍ ŏ O͘ Ó͘ Ò͘ Ô͘ Ō͘ O̍͘ Ŏ͘ o͘ ó͘ ò͘ ô͘ ō͘ o̍͘ ŏ͘ Ö Ö́ Ö̀ Ö̂ Ȫ Ö̍ Ö̆ ö ö́ ö̀ ö̂ ȫ ö̍ ö̆ R Ṟ ṟ T Ṯ ṯ U̶ u̶ Ů ů U Ú Ù Û Ū U̍ Ŭ u ú ù û ū u̍ ŭ U͘ Ú͘ Ù͘ Û͘ Ū͘ U̍͘ Ŭ͘ u͘ ú͘ ù͘ û͘ ū͘ u̍͘ ŭ͘ Ṳ Ṳ́ Ṳ̀ Ṳ̂ Ṳ̄ Ṳ̍ ṳ ṳ́ ṳ̀ ṳ̂ ṳ̄ ṳ̍ chhì [O/o + Combining Dot Above Right + tiāuhō] O͘ Ó͘ Ò͘ Ô͘ Ō͘ O̍͘ Ŏ͘ o͘ ó͘ ò͘ ô͘ ō͘ o̍͘ ŏ͘ chhì [O/o + tiāuhō + Combining Dot Above Right] O͘ Ó͘ Ò͘ Ô͘ Ō͘ O̍͘ Ŏ͘ o͘ ó͘ ò͘ ô͘ ō͘ o̍͘ ŏ͘ chhì [Dotless i (U+0131)] ı ı̂ ı̀ ı̂ ı̄ ı̍ ı̆ chhì [khin-siaⁿ (U+00b7)] Thiaⁿ-·tio̍h ·a. ","date":"2018/11/20","objectID":"/drafts/poj-font-test/:0:0","tags":null,"title":"POJ font test","uri":"/drafts/poj-font-test/"},{"categories":["Tool"],"content":"Hō͘ pīntōaⁿlâng ê Chhōe Tâigí Sûtián kesi","date":"2018/11/20","objectID":"/chhoe-taigi-chrome-extensions/","tags":["Firefox","Addons","Chrome","Extensions","JavaScript","Pe̍hōejī","Tâigí"],"title":"Chhōe Tâigí Chrome Extensions","uri":"/chhoe-taigi-chrome-extensions/"},{"categories":["Tool"],"content":"Chhōe Tâigí sī chin hó ēng ê Tâigí sûtián bāngchām m̄koh khòaⁿ tio̍h bōehiáu ê jī tio̍h ài phahkhui bāngchām chi̍t jī chi̍t jī chhâ si̍tchāi siuⁿ hùikhì hùikhì beh ánchóaⁿ pān? bô kesi tio̍h kakī siá! só͘í chit ê kesi tio̍h seⁿ chhutlâi–ah súiōng hongsek chin kántan kā beh chhōe ê jī kho͘–khílâi chhi̍h niauchhí á chiaⁿ pêng, tio̍h sûi ēsái chhōe–ah! Kho͘–khílâi chhi̍h chhàitoaⁿ\"\rKho͘–khílâi chhi̍h chhàitoaⁿ\r mā ēsái kā beh chhōe ê jī kho͘–khílâi chhi̍h icon tio̍h ē kah kiatkó ēng popup windows khui chhutlâi Kho͘–khílâi chhi̍h icon\"\rKho͘–khílâi chhi̍h icon\r beh ánnóa chhōe ēsái tī Option siattēng Option\"\rOption\r nāsī ti̍tchiap chhi̍h icon tio̍h ē khui popup windown kàu Chhōe Tâigí ê bāngchām! Ti̍tchiap chhi̍h icon\"\rTi̍tchiap chhi̍h icon\r ","date":"2018/11/20","objectID":"/chhoe-taigi-chrome-extensions/:0:0","tags":["Firefox","Addons","Chrome","Extensions","JavaScript","Pe̍hōejī","Tâigí"],"title":"Chhōe Tâigí Chrome Extensions","uri":"/chhoe-taigi-chrome-extensions/"},{"categories":null,"content":"因為公司測試機上使用的 PHP 版本是 5.4.x 我的開發環境是的用 7.X 版 有時候一個不小心就會用到舊版不支援的 function 為了在 debug 時能夠可以重現測試機的錯誤 並且盡可能避免掉一些環境問題導致的錯誤 所以就打算在開發環境上部屬多個版本的 PHP 在網路上找了很多方法，最後決定使用現代一點的工具 也就是 c9s 大大所開發的 PHPBrew 來解決這個問題 PHPBrew 除了可以安裝多個版本的 PHP ，並且快速切換之外 還可以讓 PHP 開發者們像使用簡單的指令來安裝需要的套件 看是要裝 xdebug 還是 composer 都只需要一行指令就搞定 再也不需要在看手冊要怎麼裝啦 也避免碰到一些預料外的狀況要排除 不過後來用了才發現 PHPBrew 的坑更大XDD 但確實是方便好用 要當個現代的 PHPer 說什麼也要把問題解決才行啊！ ","date":"2018/09/28","objectID":"/drafts/phpbrew-note/:0:0","tags":null,"title":"[PHP] PHPBrew Note","uri":"/drafts/phpbrew-note/"},{"categories":null,"content":"安裝 測試環境 OS：Ubuntu 18.04 LTS PHP︰7.2 嘗試了官方手冊，各式各樣的 tutorial 找到最穩最快速的安裝方法是使用這個安裝腳本 但是媽媽說不能隨便相信陌生人 直接跑網路上來源不明的腳本很危險啊 所以我們還是先一行一行來安裝比較妥當 先更新你的 Ubuntu sudo apt update 安裝 PHPBrew 依賴套件 sudo apt install wget php build-essential libxml2-dev libxslt1-dev libbz2-dev libcurl4-openssl-dev libcurl4-gnutls-dev libmcrypt-dev libreadline-dev libssl-dev autoconf apache2-dev 安裝 PHPBrew wget https://github.com/phpbrew/phpbrew/raw/master/phpbrew chmod +x phpbrew mv phpbrew /usr/local/bin 初始化 PHPBrew Bash Sript 到你的 Shell 環境 phpbrew init 接著在 .bashrc 或 .zshrc 文件加入這行 [[ -e ~/.phpbrew/bashrc ]] \u0026\u0026 source ~/.phpbrew/bashrc 建立 curl symbolic link 避免這個已知的 bug sudo ln -s /usr/include/x86_64-linux-gnu/curl /usr/include/curl 下載並編譯特定版本的 openssl ，以避免 openssl 版本過新導致所導致的 bug wget https://www.openssl.org/source/openssl-1.0.2o.tar.gz tar -xzvf openssl-1.0.2o.tar.gz pushd openssl-1.0.2o ./config -fPIC shared --prefix=/usr/local --openssldir=/usr/local/openssl make make test sudo make install popd 重設編譯 PHP 會需要權限的目錄們 sudo chmod oga+rw -R /etc/apache2 /usr/sbin/a2enmod /usr/lib/apache2/modules/ /var/lib/apache2/module/ 設定編譯 PHP 會用到的共享 openssl 目錄 export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig 安裝 5.6.38 和 7.2.10 這2個版本的 PHP 需要 pdo, mysql, openssl, xdebug, apxs2這幾個套件 如果你不是用 MySQL/MariaDB 用 PostgreSQL 把 +mysql 替換成 pgsql 用 SQLite 把 +mysql 替換成 sqlite 安裝 PHP 5.6.38, pdo, mysql, openssl, xdebug 2.2.7 phpbrew -d install php-5.6.38 +default +pdo +mysql +apxs2 -- --with-openssl=shared phpbrew use php-5.6.38 phpbrew -d ext install openssl phpbrew -d ext install xdebug 2.2.7 安裝 PHP 7.2.10, pdo, mysql, openssl, xdebug phpbrew -d install php-7.2.10 +default +pdo +mysql +apxs2 -- --with-openssl=shared phpbrew use php-7.2.10 phpbrew -d ext install openssl phpbrew -d ext install xdebug 安裝完成後把剛才修改權限的目錄們的權限給還原就都安裝完成啦 sudo find /etc/apache2 /usr/lib/apache2/modules /var/lib/apache2/module/ -type f -exec chmod 644 {} \\; sudo find /etc/apache2 /usr/lib/apache2/modules /var/lib/apache2/module/ /usr/sbin/a2enmod -type d -exec chmod 755 {} \\; 我後來在使用 composer install 的時候彈出了一個警告訊息 [Composer\\Exception\\NoSslException] The openssl extension is required for SSL/TLS protection but is not available. If you can not enable the openssl extension, you can disable this error, at your own risk, by setting the 'disable-tls' option to true. 簡單來說就是說 composer 找不到 openssl 你可以選擇把這個警告訊息拿掉，但是風險要自行承擔 但是這樣會把 composer 所有的 https request 改成 http 這樣的作法不僅影響安全性也不健康 爬文發現原來是因為 PHP 預設不會主動啟用 openssl 所以我們必須把它手動啟用才行 phpbrew config 搜尋extension=openssl 把前面的分號也就是註解拿掉存檔 重啟 Apache2 就沒問題囉 sudo systemctl restart apache2 ","date":"2018/09/28","objectID":"/drafts/phpbrew-note/:0:1","tags":null,"title":"[PHP] PHPBrew Note","uri":"/drafts/phpbrew-note/"},{"categories":null,"content":"切換 Apache2 使用的 PHP 版本 使用 phpbrew switch/use 只會更改 CLI 使用的 PHP Apache2 所使用的 PHP 必須手動更新才行 剛才用 PHPBrew 安裝 PHP 的時候加上的 +apxs2 就是為了在編譯的時候就幫我們產生好 Apache2 的 modules 檔 我們只需要手動選擇要載入的 modules 檔就行了 但是這樣切換起來很麻煩啊，這種繁瑣的工作還是要用腳本解決才行 找到了這篇下面的 2 個回應的腳本都寫很不錯 我就把它合併成一支腳本用了 執行 bash phpbrewswitch 一開始會列出你有安裝的版本，前面有 * 字號的是現在正在使用的版本 輸入版本號最前面的數字後按下 enter 就會開始幫你做版本切換 因為設定 Apache2 會需要 root 權限，所以會跟你要 root 密碼，這時候請放心交給它吧 最後看到 Restart apache2 success! 就代表切換完成啦 Apache2 和 Shell 的 PHP 都會一併切換 不過由於我的 Shell 用的是 zsh phpbrew switch 是在 bash script 中切換的 所以要重新載入 zshrc 後 CLI 的 PHP 才會切換完成 不過我主要目的是要切換 Apache2 的 PHP 所以這個小問題沒什麼影響 (Shell 使用 bash 的朋友不會碰到這個問題哦) ","date":"2018/09/28","objectID":"/drafts/phpbrew-note/:0:2","tags":null,"title":"[PHP] PHPBrew Note","uri":"/drafts/phpbrew-note/"},{"categories":null,"content":"curl 問題 安裝 php 碰到的狀況 今天安裝不同版本的時候又碰到另一個錯誤啦 當我執行 phpbrew -d install php-5.4.45 +default +pdo +mysql +apxs2 -- --with-openssl=shared 跑一跑回傳 configure: error: Please reinstall the libcurl distribution - easy.h should be in \u003ccurl-dir\u003e/include/curl/ 爬了一下文發現似乎是 PHP 的 bug curl 的 symbolic link 我們在安裝的第 6 步已經建立了 所以只要把 curl 缺的依賴套件 libcurl4-gnutls-dev 補上即可 sudo apt-get install libcurl4-gnutls-dev 我也把上面的 setup.sh 和安裝流程都補上這個依賴套件了 安裝 xdebug 碰到的狀況 執行 phpbrew ext install xdebug 只回傳個這個訊息就什麼都沒了 Downloading https://pecl.php.net/rest/r/xdebug/stable.txt via curl extension 只能從訊息判斷大概是 curl 出了問題 但是我直接 ping https://pecl.php.net/ 跟 curl https://pecl.php.net/ 都沒問題啊 後來爬了手冊發現 phpbrew 可以指定下載方式，既然 crul 不行那就換 wget 試試看 phpbrew ext install --downloader wget xdebug …結果改用 wget 就可以正常安裝了 安裝 xdebug 後記得還得把遠端除錯給設定好才行 phpbrew 的 xdebug 設定不在 php.ini 裡面 要從 xdebug.ini 設定 不同版本的 PHP 的設定檔也不同 不知道放在哪的話可以用 locate 來找 locate xdebug.ini 第一個是預設的，下面的 5.6.38 和 7.2.10 目錄下的就是我們要修改的檔案 /home/rexliu/.phpbrew/build/php-7.2.10/ext/xdebug/xdebug.ini /home/rexliu/.phpbrew/php/php-5.6.38/var/db/xdebug.ini /home/rexliu/.phpbrew/php/php-7.2.10/var/db/xdebug.ini vim ~/.phpbrew/php/php-5.6.38/var/db/xdebug.ini 預設只有指定 xdebug.so 檔 zend_extension=xdebug.so 加上遠端的設定 zend_extension=xdebug.so xdebug.remote_autostart=1 xdebug.remote_enable=1 xdebug.remote_host=localhost xdebug.remote_port=9000 xdebug.remote_handler=dbgp 重啟 Apache2 就完成了 sudo systemctl restart apache2 reference : configure: error: Cannot find OpenSSL’s libraries unable to install php. 5.3.29 getting error Tell Apache to use a specific PHP version installed using phpbrew Not able to install GD in Ubuntu 17.10 使用PHPBrew管理PHP版本 PHPBrew：編譯 PHP 的各種踩雷紀錄 easy.h should be in \u003ccurl-dir\u003e/include/curl/ Cannot Install mysql extension ","date":"2018/09/28","objectID":"/drafts/phpbrew-note/:0:3","tags":null,"title":"[PHP] PHPBrew Note","uri":"/drafts/phpbrew-note/"},{"categories":null,"content":"設外鍵 Column type要一樣，若是不同資料庫要確認引擎是否都是InnoDB ALTER TABLE `TABLE_NAME_1` ADD CONSTRAINT `FOREIGN_KEY_NAME` FOREIGN KEY (`COLUMN_NAME `) REFERENCES `DB_NAME`.`TABLE_NAME_2` (`user_no`); ","date":"2018/04/10","objectID":"/drafts/sql-note/:1:0","tags":null,"title":"[SQL] Note","uri":"/drafts/sql-note/"},{"categories":null,"content":"快速表格備份 SELECT * INTO BACKUP_TABLE_NAME FROM TABLE_NAME ","date":"2018/04/10","objectID":"/drafts/sql-note/:2:0","tags":null,"title":"[SQL] Note","uri":"/drafts/sql-note/"},{"categories":null,"content":"MySQL / Oracle 和 PostgresSQL Index 特性 ","date":"2018/04/10","objectID":"/drafts/sql-note/:3:0","tags":null,"title":"[SQL] Note","uri":"/drafts/sql-note/"},{"categories":null,"content":"修改 commit 的 name \u0026 email git commit --amend --author=\"Author Name \u003cemail@address.com\u003e\" ","date":"2018/02/16","objectID":"/drafts/git-note/:1:0","tags":null,"title":"[Git] Note","uri":"/drafts/git-note/"},{"categories":null,"content":"批次將 CRLF 修改為 LF # Remove everything from the index git rm --cached -r . # Re-add all the deleted files to the index # You should get lots of messages like: # \"warning: CRLF will be replaced by LF in \u003cfile\u003e.\" git diff --cached --name-only -z | xargs -0 git add # Commit git commit -m \"Fix CRLF\" reference : git-diff to ignore ^M ","date":"2018/02/16","objectID":"/drafts/git-note/:2:0","tags":null,"title":"[Git] Note","uri":"/drafts/git-note/"},{"categories":null,"content":"Array ","date":"2017/12/05","objectID":"/drafts/php-note/:1:0","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"清除陣列字串頭尾的多餘空白 $test = array_map('trim', $test); ","date":"2017/12/05","objectID":"/drafts/php-note/:1:1","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"清除陣列空值並重新排序 index array_values(array_filter($aArray)); ","date":"2017/12/05","objectID":"/drafts/php-note/:1:2","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"清除陣列重複值 使用 array_flip 和 array_keys 會比 array_unique 來的快速 array_keys 會重新排序 index array_flip 則不會重新排序 index 範例 $test = Array(8, 9, 10, 11, 10, 11, 8, 9); print_r($test); // 使用前的陣列 Array ( [0] =\u003e 8 [1] =\u003e 9 [2] =\u003e 10 [3] =\u003e 11 [4] =\u003e 10 [5] =\u003e 11 [6] =\u003e 8 [7] =\u003e 9 ) $test = array_keys(array_flip($test)); print_r($test); // 使用後的陣列 Array ( [0] =\u003e 8 [1] =\u003e 9 [2] =\u003e 10 [3] =\u003e 11 ) $test = array_flip(array_flip($test)); print_r($test); // 使用後的陣列 Array ( [6] =\u003e 8 [7] =\u003e 9 [4] =\u003e 10 [5] =\u003e 11 ) 實做 經過測試在 PHP \u003e= 7.0 的環境下 比較 4 種刪除重複值的方式速度如下 array_flip = array_values = array_keys \u003e array_unique 而且前 3 者遠快於 array_unique class testClass { public static function ArrayUnique() { $test = array(); for ($run = 0; $run \u003c 1000; $run++) { $test[] = rand(0,100); } $time = microtime(true); for ($run = 0; $run \u003c 100; $run++) { $out = array_unique($test); } $time = microtime(true) - $time; echo 'Array Unique: ' . $time . \"\\n\"; } public static function KeysFlip() { $test = array(); for ($run = 0; $run \u003c 1000; $run++) { $test[] = rand(0,100); } $time = microtime(true); for ($run = 0; $run \u003c 100; $run++) { $out = array_keys(array_flip($test)); } $time = microtime(true) - $time; echo 'Keys Flip: ' . $time . \"\\n\"; } public static function FlipFlip() { $test = array(); for ($run = 0; $run \u003c 1000; $run++) { $test[] = rand(0,100); } $time = microtime(true); for ($run = 0; $run \u003c 100; $run++) { $out = array_flip(array_flip($test)); } $time = microtime(true) - $time; echo 'Flip Flip: ' . $time . \"\\n\"; } public static function main() { self::ArrayUnique(); // Keys Flip: 0.0010750293731689 self::KeysFlip(); // Keys Flip: 0.0010750293731689 self::FlipFlip(); // Flip Flip: 0.0010089874267578 } } testClass::main(); reference : [PHP] 將陣列中重複的值刪除最好方法 array_flip (移除陣列中重複的值) ","date":"2017/12/05","objectID":"/drafts/php-note/:1:3","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"排序2維陣列 vArrayOrderBy允許多重排序 function vArrayOrderBy() { $args = func_get_args(); $data = array_shift($args); foreach ($args as $n =\u003e $field) { if (is_string($field)) { $tmp = array(); foreach ($data as $key =\u003e $row) { $tmp[$key] = $row[$field]; } $args[$n] = $tmp; } } $args[] = \u0026$data; call_user_func_array('array_multisort', $args); return array_pop($args); } // The sorted array is now in the return value of the function // instead of being passed by reference. $data[] = array('volume' =\u003e 67, 'edition' =\u003e 2); $data[] = array('volume' =\u003e 86, 'edition' =\u003e 1); $data[] = array('volume' =\u003e 85, 'edition' =\u003e 6); $data[] = array('volume' =\u003e 98, 'edition' =\u003e 2); $data[] = array('volume' =\u003e 86, 'edition' =\u003e 6); $data[] = array('volume' =\u003e 67, 'edition' =\u003e 7); // Pass the array, followed by the column names and sort flags $sorted = vArrayOrderBy($data, 'volume', SORT_DESC, 'edition', SORT_ASC); print_r($sorted); ","date":"2017/12/05","objectID":"/drafts/php-note/:1:4","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"合併2維陣列 /** * Merge 2D Array, use 2 foreach is non efficient, * but this way can merge multi row * * @param array $aArr1 must be 2D array * @param array $aArr2 must be 2D array * @param string $sKey comparison condition, both array has this key * @return array */ function a2DArrayMerge($aArr1 = array(), $aArr2 = array(), $sKey = '') { $resultArr = array(); foreach ($aArr1 as $bemerge) { $sKeyVal = $bemerge[$sKey]; foreach ($aArr2 as $search) { if ($search[$sKey] == $sKeyVal) { $resultArr[] = array_merge($search,$bemerge); break; } } } return $resultArr; } /** * Merge 2D Array, use 1 foreach is more efficient, * but this way can only merge 1 row * * @param array $aArr1 must be 2D array base array * @param array $aArr2 must be 2D array add array * @param string $sAddKey you want to add's $aArr2 key * @param string $sMainKey comparison condition, both array has this key * @return array */ public function aArrayMergeByMainKey($aArr1, $aArr2, $sAddKey, $sMainKey) { $aIndexValue = array_column($aArr2, \"$sAddKey\", \"$sMainKey\"); foreach($aArr1 as $key =\u003e $item) { $exist = array_key_exists($item[\"$sMainKey\"], $aIndexValue); $aArr1[$key][\"$sAddKey\"] = $exist ? $aIndexValue[$item[\"$sMainKey\"]] : ''; } return $aArr1; } /** * Merge 2D Array, use 1 foreach and recursiveis is more elegant, * this way dose'n need any key, * it will directly replace repeat key. not fit in this case * * @param array $aArr1 must be 2D array * @param array $aArr2 must be 2D array * @return array */ public function aArrayMergeRecursive(\u0026$aArr1, \u0026$aArr2) { $aMerged = $aArr1; foreach ($aArr2 as $key =\u003e \u0026$value) { if (is_array($value) \u0026\u0026 isset($aMerged[$key]) \u0026\u0026 is_array($aMerged[$key])) { $aMerged[$key] = self::aArrayMergeRecursive($aMerged[$key], $value); } else { $aMerged[$key] = $value; } } return $aMerged; } ","date":"2017/12/05","objectID":"/drafts/php-note/:1:5","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Operator ","date":"2017/12/05","objectID":"/drafts/php-note/:2:0","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Spaceship Operator PHP7 spaceship operator very helpful in sorting function callback // Just wanted to show off the beauty of PHPs spaceship operator in this use case. // tested on PHP 7.1 $a = [2, 1, 3, 6, 5, 4, 7]; $asc = $desc = $a; usort($asc, function (int $a, int $b) { return ($a \u003c=\u003e $b); }); usort($desc, function (int $a, int $b) { return -($a \u003c=\u003e $b); }); print_r([ $a, $asc, $desc ]); /** * Usort with PHP7 Spaceship vs PHP5.6 * */ // spaceship operator usort($array, function(int $a, int $b) { return $a \u003c=\u003e $b; }); // ternary operator usort($array, function(int $a, int $b) { if ($a == $b) { return 0; } return ($a \u003c $b) ? -1 : 1; }); Output Array ( [0] =\u003e Array ( [0] =\u003e 2 [1] =\u003e 1 [2] =\u003e 3 [3] =\u003e 6 [4] =\u003e 5 [5] =\u003e 4 [6] =\u003e 7 ) [1] =\u003e Array ( [0] =\u003e 1 [1] =\u003e 2 [2] =\u003e 3 [3] =\u003e 4 [4] =\u003e 5 [5] =\u003e 6 [6] =\u003e 7 ) [2] =\u003e Array ( [0] =\u003e 7 [1] =\u003e 6 [2] =\u003e 5 [3] =\u003e 4 [4] =\u003e 3 [5] =\u003e 2 [6] =\u003e 1 ) ) reference : PHP: usort - Manual ","date":"2017/12/05","objectID":"/drafts/php-note/:2:1","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Null Coalescing Operator // Example usage for: Null Coalesce Operator $action = $_POST['action'] ?? 'default'; ","date":"2017/12/05","objectID":"/drafts/php-note/:2:2","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Ternary Operator // Example usage for: Ternary Operator $action = isset($_GET['action']) ? $_GET['action'] : 'default'; ","date":"2017/12/05","objectID":"/drafts/php-note/:2:3","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"if/else Statement if (isset($_POST['action'])) { $action = $_POST['action']; } else { $action = 'default'; } ","date":"2017/12/05","objectID":"/drafts/php-note/:2:4","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Nesting null coalescing operator // Please note that the null coalescing operator allows for simple nesting: $foo = null;**** $bar = null; $baz = 1; $qux = 2; echo $foo ?? $bar ?? $baz ?? $qux; // outputs 1 ","date":"2017/12/05","objectID":"/drafts/php-note/:2:5","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Security ","date":"2017/12/05","objectID":"/drafts/php-note/:3:0","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Password Hash \u0026 Salt The right way to hash passwords in PHP require : PHP version \u003e= 5.5 $hash = password_hash(\"secretcode\", PASSWORD_DEFAULT); echo $sPasswordVerify = password_verify('secretcode', $hash) ? 'Password is valid!' : 'Invalid password.'; reference : securepasswords.info - php ","date":"2017/12/05","objectID":"/drafts/php-note/:3:1","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Comparisons ","date":"2017/12/05","objectID":"/drafts/php-note/:4:0","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Comparisons of $x with PHP functions if ($x) 和 empty($x) 是一組 isset($x) 和 is_null($x) 是一組 ","date":"2017/12/05","objectID":"/drafts/php-note/:4:1","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Loose comparisons with == ","date":"2017/12/05","objectID":"/drafts/php-note/:4:2","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Strict comparisons with === reference : PHP: PHP type comparison tables - Manual ","date":"2017/12/05","objectID":"/drafts/php-note/:4:3","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Control Structures ","date":"2017/12/05","objectID":"/drafts/php-note/:5:0","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"},{"categories":null,"content":"Break / Continue Break / Continue 可以結束當下的 for/foreach/while/do while/switch 迴圈 要注意的是，不同於其他語言，對 PHP 來說，Switch 是可以使用 Continue 做跳出的一種迴圈結構 Break / Continue 後面可以接數字參數來決定要跳過第幾層迴圈。 範例 如果想要在迴圈中的 Switch 中跳出到下一層迴圈的話， 使用 Continue 的話是無法跳出迴圈的，要使用 Continue 2 ， 如果要再多一層迴圈要跳出的話就是 Continue 3。 依此類推 $aNumbers = range(1, 10); $aLetters = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'); $i = 0; foreach ($aLetters as $sLetter) { ++$i; echo $sLetter . PHP_EOL; foreach ($aNumbers as $iNumber) { ++$i; switch ($sLetter) { case 'd': // So here I want to 'break;' out of the switch, 'break;' // out of the $aNumbers loop, // and then 'continue;' in the $aLetters loop. // go to the end of this switch, numbers loop iteration, // letters loop iteration continue 3; break; case 'f': // skip to the end of the switch control AND // the current iteration of the number's loop, // but still process the letter's loop continue 2; break; case 'h': // would be more appropriate to break the number's loop break 2; } // Still in the number's loop echo \" $iNumber\"; } // Stuff that should be done if the 'letter' is not 'd'. echo \" $i\" . PHP_EOL; } 回傳結果 a 1 2 3 4 5 6 7 8 9 10 11 b 1 2 3 4 5 6 7 8 9 10 22 c 1 2 3 4 5 6 7 8 9 10 33 d e 1 2 3 4 5 6 7 8 9 10 46 f 57 g 1 2 3 4 5 6 7 8 9 10 68 h 70 i 1 2 3 4 5 6 7 8 9 10 81 reference : PHP: continue - Manual Generate array of random unique numbers in PHP - Stack Overflow ","date":"2017/12/05","objectID":"/drafts/php-note/:5:1","tags":null,"title":"[PHP] Note","uri":"/drafts/php-note/"}]